<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
            http://www.springframework.org/schema/aop  
            http://www.springframework.org/schema/aop/spring-aop.xsd ">

	<context:component-scan base-package="com.hhcf.backend.*" />


	<!-- 注解请求映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<property name="interceptors">
			<list>
				<!-- 日志拦截器，这是你自定义的拦截器 <ref bean="logNDCInteceptor" /> -->
				<!-- RequestHelper拦截器，这是你自定义的拦截器 <ref bean="myRequestHelperInteceptor" 
					/> -->
				<!-- <ref bean="myPermissionsInteceptor" /> 权限拦截器，这是你自定义的拦截器 -->
				<!-- <ref bean="myUserInfoInteceptor" /> 用户信息拦截器，这是你自定义的拦截器 -->
			</list>
		</property>
	</bean>
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="byteArray_hmc" />
				<ref bean="string_hmc" />
				<ref bean="resource_hmc" />
				<ref bean="source_hmc" />
				<ref bean="xmlAwareForm_hmc" />
				<ref bean="jaxb2RootElement_hmc" />
				<ref bean="jackson_hmc" />
			</list>
		</property>
		<!-- 自定义解析器实现请求参数绑定方法参数 -->
		<property name="customArgumentResolvers">
			<list>
				<bean class="com.hhcf.method.HmUserArgumentResolver"></bean>
			</list>
		</property>
	</bean>
	<!-- 基于注解驱动 <mvc:annotation-driven> <mvc:argument-resolvers> <bean class="com.hhcf.method.HmUserArgumentResolver"/> 
		</mvc:argument-resolvers> </mvc:annotation-driven> -->




	<!-- 指定自己定义的validator -->
	<mvc:annotation-driven validator="validator" />

	<!-- 以下 validator ConversionService 在使用 mvc:annotation-driven 会 自动注册 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
	<!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找 -->
				<value>classpath:messages</value>
				<value>classpath:org/hibernate/validator/ValidationMessages</value>
			</list>
		</property>
		<property name="useCodeAsDefaultMessage" value="false" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="cacheSeconds" value="60" />
	</bean>
	<!--注册Bean验证后处理器 <bean class="org.springframework.validation.beanvalidation.BeanValidationPostProcessor"/> -->





	<!-- 处理.. -->
	<bean id="byteArray_hmc"
		class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
	<!-- 处理.. -->
	<bean id="string_hmc"
		class="org.springframework.http.converter.StringHttpMessageConverter" />
	<!-- 处理.. -->
	<bean id="resource_hmc"
		class="org.springframework.http.converter.ResourceHttpMessageConverter" />
	<!-- 处理.. -->
	<bean id="source_hmc"
		class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
	<!-- 处理.. -->
	<bean id="xmlAwareForm_hmc"
		class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />
	<!-- 处理.. -->
	<bean id="jaxb2RootElement_hmc"
		class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />
	<!-- 处理json -->
	<bean id="jackson_hmc"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />


	<!-- 视图解释类 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/webpage/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- 总错误处理 <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
		<property name="defaultErrorView"> <value>/error/error</value> </property> 
		<property name="defaultStatusCode"> <value>500</value> </property> <property 
		name="warnLogCategory"> <value>org.springframework.web.servlet.handler.SimpleMappingExceptionResolver 
		</value> </property> </bean> -->

	<!-- 启用spring mvc 注解 <mvc:annotation-driven> <mvc:message-converters> <bean 
		id="jsonConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"> 
		<property name="supportedMediaTypes"> <list> <value>text/html;charset=UTF-8</value> 
		</list> </property> </bean> </mvc:message-converters> </mvc:annotation-driven> -->

	<!-- springmvc传json值时的乱码解决 <mvc:annotation-driven> <mvc:message-converters> 
		<bean class="org.springframework.http.converter.StringHttpMessageConverter"> 
		<property name="supportedMediaTypes"> <list> <value>application/json;charset=UTF-8</value> 
		</list> </property> </bean> </mvc:message-converters> </mvc:annotation-driven> -->

	<!-- SpringMVC 传参控制 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:defaultEncoding="UTF-8" p:maxUploadSize="2097152">
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>

	<!-- Bean解析器,级别高于默认解析器,寻找bean对象进行二次处理 -->
	<bean id="beanNameViewResolver"
		class="org.springframework.web.servlet.view.BeanNameViewResolver"
		p:order="0">
	</bean>

	<!-- Excel 处理 根据用户输入进行对象处理 -->
	<bean id="jeecgExcelView" class="org.ztfframework.poi.excel.view.ZtfJeecgSingleExcelView" />
	<bean id="jeecgTemplateExcelView"
		class="org.ztfframework.poi.excel.view.HhcfJeecgSingleExcelView" />
	<bean id="jeecgTemplateWordView" class="org.jeecgframework.poi.excel.view.JeecgTemplateWordView" />
	<bean id="jeecgMapExcelView" class="org.jeecgframework.poi.excel.view.JeecgMapExcelView" />

	<!-- value标签 -->
	<bean id="hmProperty"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<array>
				<value>classpath:messages.properties</value>
				<value>classpath:solr.properties</value>
			</array>
		</property>
	</bean>

	<mvc:annotation-driven />
</beans> 
 